{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Dropbox\\\\My PC (LAPTOP-M9TB4ITQ)\\\\Desktop\\\\SocialMediaApp\\\\client\\\\src\\\\Components\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper, Container } from \"@mui/material\";\nimport FileBase from \"react-file-base64\";\nimport { createPost, updatePost } from \"../api\";\nimport { useAuth } from \"../auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(_ref) {\n  _s();\n  var _JSON$parse;\n  let {\n    postData,\n    setPostData,\n    currentId,\n    setCurrentId,\n    posts\n  } = _ref;\n  const {\n    authTokens\n  } = useAuth();\n  const post = currentId ? posts.find(message => message._id === currentId) : null;\n  const user = (_JSON$parse = JSON.parse(authTokens)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.oldUser;\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\"\n    });\n  };\n  useEffect(() => {\n    if (!(post !== null && post !== void 0 && post.title)) clear();\n    if (post) setPostData(post);\n  }, [post]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const Data = {\n      title: postData.title,\n      message: postData.message,\n      tags: postData.tags,\n      selectedFile: postData.selectedFile\n    };\n    if (currentId === 0) {\n      createPost(Data);\n    } else {\n      updatePost(Data, currentId);\n    }\n    clear();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            my: \"1rem\"\n          },\n          name: \"title\",\n          variant: \"outlined\",\n          label: \"Title\",\n          fullWidth: true,\n          value: postData.title,\n          onChange: e => setPostData({\n            ...postData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            my: \"1rem\"\n          },\n          name: \"message\",\n          variant: \"outlined\",\n          label: \"Message\",\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          value: postData.message,\n          onChange: e => setPostData({\n            ...postData,\n            message: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            my: \"1rem\"\n          },\n          name: \"tags\",\n          variant: \"outlined\",\n          label: \"Tags (coma separated)\",\n          fullWidth: true,\n          value: postData.tags,\n          onChange: e => setPostData({\n            ...postData,\n            tags: e.target.value.split(\",\")\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FileBase, {\n            type: \"file\",\n            multiple: false,\n            onDone: _ref2 => {\n              let {\n                base64\n              } = _ref2;\n              return setPostData({\n                ...postData,\n                selectedFile: base64\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          sx: {\n            mx: \"auto\",\n            my: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            type: \"submit\",\n            fullWidth: true,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              my: \"1rem\"\n            },\n            variant: \"contained\",\n            color: \"secondary\",\n            size: \"large\",\n            onClick: clear,\n            fullWidth: true,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"vhkeUVnh9uSSn4Rk3nsB4Ajf4oo=\", false, function () {\n  return [useAuth];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useEffect","TextField","Button","Typography","Paper","Container","FileBase","createPost","updatePost","useAuth","jsxDEV","_jsxDEV","Form","_ref","_s","_JSON$parse","postData","setPostData","currentId","setCurrentId","posts","authTokens","post","find","message","_id","user","JSON","parse","oldUser","clear","title","tags","selectedFile","handleSubmit","e","preventDefault","Data","children","autoComplete","noValidate","onSubmit","variant","fileName","_jsxFileName","lineNumber","columnNumber","sx","my","name","label","fullWidth","value","onChange","target","multiline","rows","split","type","multiple","onDone","_ref2","base64","mx","color","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Dropbox/My PC (LAPTOP-M9TB4ITQ)/Desktop/SocialMediaApp/client/src/Components/Form.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper, Container } from \"@mui/material\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { createPost, updatePost } from \"../api\";\r\nimport { useAuth } from \"../auth\";\r\nexport default function Form({ postData, setPostData,currentId,setCurrentId,posts }) {\r\n  const { authTokens } = useAuth();\r\n  const post = currentId ? posts.find((message) => message._id === currentId) : null; \r\n  const user = JSON.parse(authTokens)?.oldUser;\r\n  \r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({\r\n      title: \"\",\r\n      message: \"\",\r\n      tags: \"\",\r\n      selectedFile: \"\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!post?.title) clear();\r\n    if (post) setPostData(post);\r\n  },[post]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const Data = {\r\n      title: postData.title,\r\n      message: postData.message,\r\n      tags: postData.tags,\r\n      selectedFile: postData.selectedFile,\r\n    };\r\n    if(currentId===0){\r\n    createPost(Data);\r\n    }else{\r\n      updatePost(Data,currentId);\r\n    }\r\n    \r\n    clear();\r\n  };\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Paper>\r\n        <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n          <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\r\n          <TextField\r\n            sx={{ my: \"1rem\" }}\r\n            name=\"title\"\r\n            variant=\"outlined\"\r\n            label=\"Title\"\r\n            fullWidth\r\n            value={postData.title}\r\n            onChange={(e) =>\r\n              setPostData({ ...postData, title: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            sx={{ my: \"1rem\" }}\r\n            name=\"message\"\r\n            variant=\"outlined\"\r\n            label=\"Message\"\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            value={postData.message}\r\n            onChange={(e) =>\r\n              setPostData({ ...postData, message: e.target.value })\r\n            }\r\n          />\r\n          <TextField\r\n            sx={{ my: \"1rem\" }}\r\n            name=\"tags\"\r\n            variant=\"outlined\"\r\n            label=\"Tags (coma separated)\"\r\n            fullWidth\r\n            value={postData.tags}\r\n            onChange={(e) =>\r\n              setPostData({ ...postData, tags: e.target.value.split(\",\") })\r\n            }\r\n          />\r\n          <div>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setPostData({ ...postData, selectedFile: base64 })\r\n              }\r\n            />\r\n          </div>\r\n          <Container sx={{ mx: \"auto\", my: \"1rem\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              fullWidth\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              sx={{ my: \"1rem\" }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              onClick={clear}\r\n              fullWidth\r\n            >\r\n              Clear\r\n            </Button>\r\n          </Container>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}